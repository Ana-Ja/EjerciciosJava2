package graficos;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.ServerSocket;

import javax.swing.*;

//VIDEO 83-84-85
public class Calculadora {
	private static ServerSocket SERVER_SOCKET;

	
	public static void main(String[] args) {
		try {
			  SERVER_SOCKET = new ServerSocket(1334);
			  System.out.println("Es la primera instancia de la aplicación...");
			} catch (IOException x) {
			  System.out.println("Otra instancia de la aplicación se está ejecutando...");
			}
		MarcoCalculadora mimarco = new MarcoCalculadora();
		mimarco.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mimarco.setVisible(true);
	}

}
//clase que construye la interfax
class MarcoCalculadora extends JFrame{
	public MarcoCalculadora(){
		setTitle("Calculadora");
		setBounds(500,300,450,300);
		LaminaCalculadora milamina = new LaminaCalculadora();
		add(milamina);
		//el contenefor se tiene que adaptar a tamaño por defecto de los componentes
		//que hay em su interior y se quitaria setBounds
		pack();
	}
}
class LaminaCalculadora extends JPanel{
	public LaminaCalculadora(){
		principio=true; //para que la 1º vez que se ejecute el progr la oantalla sea true y borre la pantalla
		setLayout(new BorderLayout());
	    pantalla = new JButton("0");
		add(pantalla, BorderLayout.NORTH);
		pantalla.setEnabled(true);
	    milamina2 = new JPanel();
		milamina2.setLayout(new GridLayout(4,4));
		/*
		JButton boton1=new JButton("1");
		milamina2.add(boton1);
		JButton boton2=new JButton("2");
		milamina2.add(boton2);*/
		add(milamina2, BorderLayout.CENTER);
		//creamos el listener de los botones numeros
		InsertaNumero oyente = new InsertaNumero();
		//creamos el listener de los botones operaciones
		AccionOrden orden  = new AccionOrden();
		//ponemos los botones con el metodo
		ponerBoton("1",oyente);
		ponerBoton("2",oyente);
		ponerBoton("3",oyente);
		ponerBoton("/", orden);

		ponerBoton("4",oyente);
		ponerBoton("5",oyente);
		ponerBoton("6",oyente);
		ponerBoton("*", orden);

		ponerBoton("7",oyente);
		ponerBoton("8",oyente);
		ponerBoton("9",oyente);
		ponerBoton("-",orden);

		ponerBoton("0",oyente);
		ponerBoton(".",orden);
		ponerBoton("=",orden);
		ponerBoton("+",orden);

		add(milamina2, BorderLayout.CENTER);
		ultimaoperacion="=";
	}
	//me creo un metodo para crear todos los botones en vez de hacerlo
	//como lo estaba haciendo arriba dentro del constructor
	private void ponerBoton(String rotulo, ActionListener oyente){
		JButton boton = new JButton(rotulo);
		milamina2.add(boton);
		
		boton.addActionListener(oyente);
	}
	private class InsertaNumero implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			//devuelve el string asociado con la accion, ed, el texto asociado al boton
			String entrada=e.getActionCommand();
			if (principio){
				pantalla.setText("");
				principio=false;
			}
			pantalla.setText(pantalla.getText() + entrada);
		}
	}
	//clase que gestiona los eventos de las operaciones matematicas
	private class AccionOrden implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			//va a realizar las operaciones matematicas, le pasa lo que hay en el display			
			String operacion = e.getActionCommand(); //obtengo la operacion
			Calcular(Double.parseDouble(pantalla.getText()));
			ultimaoperacion= operacion;
			principio = true;
			
		}
		public void Calcular(double x ){
			if (ultimaoperacion.equals("+")){
				resultado += x;
				System.out.println(resultado);
			}
			if (ultimaoperacion.equals("-")){
				resultado -= x;
			}
			if (ultimaoperacion.equals("*")){
				resultado *= x;
			}
			if (ultimaoperacion.equals("/")){
				if (x!=0){
				resultado /= x;
				}
			}
			if (ultimaoperacion.equals("=")){
				resultado = x;
			}
			pantalla.setText("" + resultado);
		}
	}
	
	private JPanel milamina2 ;
	private JButton pantalla;
	private boolean principio;
	private double resultado; //almacenamos el rdo
	private String ultimaoperacion;
}
