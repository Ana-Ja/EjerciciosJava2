package graficos;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class pruebaAcciones {

	public static void main(String[] args) {
		MarcoAcciones mimarco = new MarcoAcciones();
		
		mimarco.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

}
class MarcoAcciones extends JFrame{
	
	public MarcoAcciones() {
		setVisible(true);
		setBounds(700,300,500,300);
		setTitle("Botones y eventos");
		//creamos un objeto lamina y se la añadimos al marco
		PanelAccion milamina = new PanelAccion();
		add(milamina);
	}
}
class PanelAccion extends JPanel{
//	JButton botonAzul = new JButton("azul");
//	JButton botonAmarillo = new JButton("amarillo");
//
//	JButton botonVerde = new JButton("verde");

	//construimos la lamina y le añadimos el boton
	public PanelAccion() {
//		add(botonAzul);
//		add(botonAmarillo);
//		add(botonVerde);
		
	//instanciamos la clase oyente para despues decir quien es la fuente del evento
	//y poner el objeto oyente a la escucha
		AccionColor accionAmarillo = new AccionColor("Amarillo",new ImageIcon("src/graficos/icono.gif"), Color.yellow);
		AccionColor accionAzul = new AccionColor("Azul",new ImageIcon("src/graficos/icono.gif"), Color.BLUE);
		AccionColor accionRojo = new AccionColor("Rojo",new ImageIcon("src/graficos/icono.gif"), Color.RED);
	
		add( new JButton(accionAmarillo));
		add( new JButton(accionAzul));
		add( new JButton(accionRojo));
	}
	//ahora ponemos la lamina a la escucha creando una clase que o bien implemente la
	//interfaz Action o bien herede de AbstractAction
	private class AccionColor extends AbstractAction {
	//la clase abstractaction implementa 6 de los 7 metodos de la clase Action
		public AccionColor(String nombre, Icon icono, Color colorboton){
			putValue(Action.NAME,nombre);
			putValue(Action.SMALL_ICON, icono);
			putValue(Action.SHORT_DESCRIPTION, "Poner la lamina de color "+ nombre);
			putValue("color_de_fondo", colorboton);
		}
		
		@Override
		public void actionPerformed(ActionEvent e) {
			Color c=(Color)getValue("color_de_fondo");
			setBackground(c);
			System.out.println("nombre: "+ getValue("nombre"));
		}
		
	}
	
}
